@model IEnumerable<CrudAssignment.Entities.Models.Product>

@{
    ViewBag.Title = "Index";
}

<!-- DataTables CSS -->
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.7/css/jquery.dataTables.css">
<link rel="stylesheet" href="/Content/screen.css" type="text/css" media="screen" title="default">
<link rel="stylesheet" href="/Content/popup.css" type="text/css" media="screen" title="default">
@section scripts
{
    @Scripts.Render("~/bundles/datatables")

    <!-- Custom jquery scripts -->
    <script src="/Scripts/custom_jquery.js" type="text/javascript"></script>

    <script type="text/javascript">
        var productTable = null;

        var productTableDatatableOrderSetting = null;

        $(document).ready(function() {
            reloadData();
        });

        function createDataTable() {
            productTable = $('#product-table').DataTable({
                paging: false,
                searching: false,
                info: false,
                "aoColumnDefs": [{ "bSortable": false, "aTargets": [0, 7] }],
                order: (productTableDatatableOrderSetting != null ? productTableDatatableOrderSetting : [[3, "asc"]])
            });
        }

        $('#select-all').click(function() {
            var changeTo = this.checked;
            $("input[name='row-checkbox']").each(function() {
                this.checked = changeTo;
            });
        });

        function getSelectedEntriesId() {
            var selectedEntriesId = [];
            $("input[name='row-checkbox']").each(function() {
                //type != hidden -> fix for error when all checkbox are checked by select-all checkbox
                if (this.checked && this.type != "hidden") {
                    selectedEntriesId.push(this.value);
                }
            });
            return selectedEntriesId;
        }

        $('#action-menu').click(function() {
            var selectedQty = getSelectedEntriesId().length;

            $('.action-add').hide();
            $('.action-edit').hide();
            $('.action-delete').hide();

            switch (selectedQty) {
                case 0:
                    $('.action-add').show();
                    break;
                case 1:
                    $('.action-edit').show();
                    $('.action-delete').show();
                    break;
                default:
                    $('.action-delete').show();
                    break;
            };
        });

        //1) Save table order settings and destroy DataTable 2) Remove all elements from product-table-body 3) Load all products to table 4) Create new DataTable
        function reloadData() {
            if (productTable != null) {
                productTableDatatableOrderSetting = productTable.order();
                productTable.destroy();
            }
            $('#product-table-body').empty();
            $.getJSON("@Url.Action("GetProducts", "Product")",
                function(data) {
                    data.forEach(function(product) {
                        var row = '<tr>';
                        row += '<td><input id="row-checkbox" name="row-checkbox" value="{0}" type="checkbox"></td>'.format(product.id);
                        row += '<td>{0}</td>'.format(product.category);
                        row += '<td>{0}</td>'.format(product.supplier);
                        row += '<td>{0}</td>'.format(product.name);
                        row += '<td>{0}</td>'.format(displayMoney(product.price));
                        row += '<td>{0}</td>'.format(displayDays(product.deliveryPeriod));
                        row += '<td>{0}</td>'.format(product.minimumStock);
                        row += '<td><button title="Edit" class="icon-1 info-tooltip" onclick="editSelectedProduct({0})"></button><button title="Delete" class="icon-2 info-tooltip" onclick="confirmDeleteSelectedProduct({0})"></button></td>'.format(product.id);
                        row += '</tr>';
                        $('#product-table-body').append(row);
                    });
                    createDataTable();
                }
            );
        }

        function editSelectedProduct(id) {
            if (id != null && id == parseInt(id)) {
                var url = "@Url.Action("Edit", "Product", new { id = "__id__"})".replace("__id__", id);
                window.location.href = url;
            } else {
                showErrorDialog(id, "edit");
            }
        }

        function confirmDeleteSelectedProduct(ids) {
            $.get("@Url.Action("ConfirmDelete", "Product")", { ids: ids.toString() },
                function(data) {
                    if (data.StatusCode != null && data.StatusCode == 400) {
                        showErrorDialog(ids, "delete");
                    } else {
                        openDeleteConfirmationDialog(data);
                    }
                }
            );
        }

        function deleteSelectedProduct(ids) {
            $.get("@Url.Action("DeleteProducts", "Product")", { ids: ids.toString() },
                function(data) {
                    closeDialog('delete-confirm-boxpopup');
                    if (data.StatusCode == 200) {
                        reloadData();
                    } else {
                        showErrorDialog(ids, "delete");
                    }
                }
            );
        }

        function showErrorDialog(ids, action) {
            $('#message-red').fadeIn('slow');
            $('#error-try-again').off('click');
            $('#error-try-again').click(function() {
                $('#message-red').fadeOut('slow');
                switch(action) {
                    case "delete":
                        confirmDeleteSelectedProduct(ids);
                        break;
                    case "edit":
                        editSelectedProduct(ids);
                        break;
                }
            });
        }

        function openDeleteConfirmationDialog(productsToDelete) {
            //TODO: Scale window minimum height (or add scroll)
            var productsToDeleteTable = "<table border=1><tr><td>Id</td><td>Name</td></tr>";
            productsToDelete.forEach(function(product) {
                productsToDeleteTable += "<tr>";
                productsToDeleteTable += "<td>" + product.id + "</td>";
                productsToDeleteTable += "<td>" + product.name + "</td>";
                productsToDeleteTable += "</tr>";
            });
            productsToDeleteTable += "</table>";

            $("#delete-confirm-content-table").html(productsToDeleteTable);
            openDialog('delete-confirm-boxpopup');
        }

        function openDialog(prospectElementId) {
            $('#overlay').fadeIn('slow');
            $('#' + prospectElementId).fadeIn('slow');
        }

        function closeDialog(prospectElementID) {
            $('#overlay').fadeOut('slow');
            $('#' + prospectElementID).fadeOut('slow');
        }
    </script>
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<div id="table-content">
    <!--  start message-red -->
    <div id="message-red" style="display: none">
        <table border="0" width="100%" cellpadding="0" cellspacing="0">
            <tr>
                <td class="red-left">Error. <a id="error-try-again" href="">Please try again.</a></td>
                <td class="red-right"><a class="close-red"><img src="/images/table/icon_close_red.gif" alt="" /></a></td>
            </tr>
        </table>
    </div>
    <!--  end message-red -->
    <!--  start message-green -->
    @if (@Convert.ToBoolean(@TempData["AddedSuccessfully"]))
    {
        <div id="message-green">
            <table border="0" width="100%" cellpadding="0" cellspacing="0">
                <tr>
                    <td class="green-left">Product added sucessfully. <a href="@Url.Action("Create", "Product")">Add new one.</a></td>
                    <td class="green-right"><a class="close-green"><img src="/images/table/icon_close_green.gif" alt="" /></a></td>
                </tr>
            </table>
        </div>
    }
    <!-- end message-green -->


    <table id="product-table" class="display dataTable">
        <thead>
            <tr>
                <th>
                    @Html.CheckBox("select-all", new { id = "select-all" })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Category.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Supplier.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DeliveryPeriod)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MinimumStock)
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody id="product-table-body"></tbody>

    </table>
</div>

    <div id="actions-box">
        <a href="" id="action-menu" class="action-slider"></a>
        <div id="actions-box-slider">
            <button id="action-edit" class="action-edit" onclick="editSelectedProduct(getSelectedEntriesId())">Edit</button>
            <button id="action-delete" class="action-delete" onclick="confirmDeleteSelectedProduct(getSelectedEntriesId())">Delete</button>
            @Html.ActionLink("Add", "Create", null, new { id = "action-add", @class = "action-add" })
        </div>
    </div>

    <div id="wrapper">
        <div id="overlay" class="overlay"></div>
        <div id="delete-confirm-boxpopup" class="box">
            <a onclick="closeDialog('delete-confirm-boxpopup');" class="boxclose"></a>
            <div id="delete-confirm-popup-content">
                <h3>Do you want to delete selected products?</h3>
                <div id="delete-confirm-content-table"></div>
                @*TODO: pass ids exacly the same as before*@
                <button onclick="deleteSelectedProduct(getSelectedEntriesId());">Yes</button>
                <button onclick="closeDialog('delete-confirm-boxpopup');">No</button>
            </div>
        </div>
    </div>
